CREATE OR REPLACE TYPE <type_name> 
AS OBJECT <user_defined_data_type>;

CREATE OR REPLACE TYPE <type_name> 
AS TABLE OF <user_defined_data_type>;

SQL>SELECT type_name, typecode, incomplete, final, instantiable
FROM user_types;

SQL>SELECT type_name, coll_type, elem_type_owner, elem_type_name
FROM user_coll_types;

/* CREATING USER DEFINE TYPE */
CREATE OR REPLACE TYPE PHONENUMBER
AS OBJECT(
MOBILE VARCHAR(10)
,LANDLINE VARCHAR(12)
); 

CREATE TABLE PERSON (
PERSONID   NUMBER(10)
,PERSON_NAME VARCHAR(20)
,PERSON_PHONE  PHONENUMBER
);

SQL>INSERT INTO PERSON(PERSONID,PERSON_NAME,PERSON_PHONE)
VALUES(&PERSONID,'&PERSON_NAME',PHONENUMBER('&MOBILE','&LANDLINE'));
SQL>SELECT * FROM PERSON;

SQL>SELECT COLUMN_NAME, DATA_TYPE
FROM USER_TAB_COLS 
WHERE TABLE_NAME = 'PERSON';

/* CREATING NESTED TABLE STRUCTURE */
CREATE TABLE <table_name> (
column_name   <user_defined_data_type>)
NESTED TABLE <column_name> STORE 
AS <name_of_nested_table>;

/*CREATION OF TABLE USING USER DEFINE TYPE */
CREATE OR REPLACE TYPE USER_PHONE 
AS TABLE OF PHONENUMBER;
/

CREATE TABLE MY_INFORMATION(
 ID NUMBER(3)
 ,NAME VARCHAR2(30)
 ,MY_PHONE USER_PHONE
 )NESTED TABLE MY_PHONE STORE 
  AS USER_PHONE_TABLE TABLESPACE SYSTEM;
 /

SQL>INSERT INTO MY_INFORMATION(ID,NAME,MY_PHONE) VALUES(&ID,'&NAME',USER_PHONE(PHONENUMBER('&MOBILE','&LANDLINE')));
SQL>SELECT * FROM MY_INFORMATION;

SQL>SELECT MI.ID,MI.NAME,MIP.*
FROM MY_INFORMATION MI,TABLE(MI.MY_PHONE) MIP;

SQSL>UPDATE MY_INFORMATION 
SET NAME='&NAME',MY_PHONE=USER_PHONE(PHONENUMBER('&MOBILE','&LANDLINE'))
WHERE ID=&ID;


SQL>UPDATE TABLE( 
SELECT MY_PHONE FROM MY_INFORMATION WHERE ID =&ID 
)MY_INFO
SET MY_INFO.MOBILE='&MOBILE'
WHERE MY_INFO.LANDLINE='&LANDLINE';

SQL>DELETE TABLE(
  SELECT MY_PHONE FROM MY_INFORMATION MI WHERE MI.ID=&ID
)MY_INFO WHERE MY_INFO.MOBILE ='&MOBILE';

SQL>DROP TABLE MY_INFORMATION PURGE;
 
SQL> SELECT TABLE_NAME,TABLE_TYPE_NAME,PARENT_TABLE_COLUMN
FROM USER_NESTED_TABLES;
======================================================================================
Creating A Collection Based On A VARRAY
======================================================================================
CREATE OR REPLACE TYPE PHONE_LIST AS OBJECT(
 PHONE_NUMBER VARCHAR(5)
);

CREATE TYPE MY_PHONE_LIST 
AS VARRAY(3) OF PHONE_LIST;

CREATE TABLE MY_INFORMATION(
 ID NUMBER(3)
 ,NAME VARCHAR2(30)
 ,MY_PHONE_LIST MY_PHONE_LIST
 );
 /
SQL>INSERT INTO MY_INFORMATION(ID,NAME,MY_PHONE_LIST)VALUES(&ID,'&NAME',MY_PHONE_LIST(PHONE_LIST('&PHONE_NUMBER')));
SQL>SELECT * FROM MY_INFORMATION;
SQL>SELECT MY_IFO.ID,MY_IFO.NAME,MY_PHO.* FROM  MY_INFORMATION  MY_IFO,TABLE(MY_IFO.MY_PHONE_LIST) MY_PHO;

SQL>UPDATE MY_INFORMATION 
    SET NAME ='&NAME' ,MY_PHONE_LIST=MY_PHONE_LIST(PHONE_LIST('&PHONE_NUMBER'));
SQL>UPDATE MY_INFORMATION 
    SET NAME='&NAME',MY_PHONE_LIST=MY_PHONE_LIST(PHONE_LIST('&PHONE_NUMBER'),PHONE_LIST('&PHONE_NUMBER'))
    WHERE ID='&ID';
	
SQL>DELETE MY_INFORMATION WHERE ID IN(
   SELECT ID FROM (
     SELECT T1.ID ,T2.*
	 FROM MY_INFORMATION T1,TABLE(T1.MY_PHONE_LIST) T2
   )
    WHERE PHONE_NUMBER= '&PHONE_NUMBER'
)  

SQL>DROP TABLE MY_INFORMATION PURGE;	

SQL>SELECT PARENT_TABLE_NAME,PARENT_TABLE_COLUMN,TYPE_NAME 
FROM USER_VARRAYS;