
SELECT TRIGGER_NAME,TRIGGER_TYPE FROM USER_TRIGGERS;

CREATE TABLE DML_LOG(
  ID NUMBER(3) PRIMARY KEY
 ,MSG VARCHAR(50) NOT NULL
 ,CHANGE_TIME DATE
);
============================================================================
CREATE SEQUENCE DML_LOG_SEQUENCE;
============================================================================
CREATE OR REPLACE TRIGGER TABLEONE_DML_BEFORE_TIGGER
BEFORE INSERT OR UPDATE OR DELETE
ON TABLEONE
DECLARE
  ACTION_MSG VARCHAR(50);
 BEGIN
   IF INSERTING THEN
      ACTION_MSG:='TABLEONE BEFORE DATA INSERTING';
   ELSIF UPDATING THEN
      ACTION_MSG:='TABLEONE BEFORE DATA UPDATING';
   ELSIF DELETING THEN
     ACTION_MSG:='TABLEONE BEFORE DATA DELETING';
   END IF;
   
   INSERT INTO DML_LOG(ID,MSG,CHANGE_TIME)VALUES(DML_LOG_SEQUENCE.NEXTVAL,ACTION_MSG,SYSDATE);  

   EXCEPTION
        WHEN OTHERS THEN
		   RAISE_APPLICATION_ERROR(-20001,SQLERRM, TRUE) ;
END TABLEONE_DML_TIGGER;
/

============================================================================
CREATE OR REPLACE TRIGGER TABLEONE_DML_AFTER_TIGGER
AFTER INSERT OR UPDATE OR DELETE
ON TABLEONE
REFERENCING NEW AS NEW OLD AS OLD FOR EACH ROW
DECLARE
  ACTION_MSG VARCHAR(50);  
 BEGIN 
   IF INSERTING THEN
      ACTION_MSG:='TABLEONE AFTER DATA INSERTING '||:OLD.ID||' '||:OLD.NAME||' '||:NEW.ID||' '||:NEW.NAME;
   ELSIF UPDATING THEN
      ACTION_MSG:='TABLEONE AFTER DATA UPDATING '||:OLD.ID||' '||:OLD.NAME||' '||:NEW.ID||' '||:NEW.NAME;
   ELSIF DELETING THEN
     ACTION_MSG:='TABLEONE AFTER DATA DELETING '||:OLD.ID||' '||:OLD.NAME||' '||:NEW.ID||' '||:NEW.NAME;
   END IF;
   
   INSERT INTO DML_LOG(ID,MSG,CHANGE_TIME)VALUES(DML_LOG_SEQUENCE.NEXTVAL,ACTION_MSG,SYSDATE);  

   EXCEPTION
        WHEN OTHERS THEN
		   RAISE_APPLICATION_ERROR(-20001,SQLERRM, TRUE) ;
END TABLEONE_DML_TIGGER;
/
============================================================================
ALTER TRIGGER TABLEONE_DML_BEFORE_TIGGER ENABLE|DESABLE;
ALTER TRIGGER TABLEONE_DML_AFTER_TIGGER ENABLE|DESABLE];
============================================================================
DROP TRIGGER TABLEONE_DML_BEFORE_TIGGER;
DROP TRIGGER TABLEONE_DML_AFTER_TIGGER;
============================================================================
INSERT INTO TABLEONE VALUES(&ID,'&NAME');
DELETE FROM TABLEONE WHERE ID=&ID;
UPDATE TABLEONE SET NAME='&NAME' WHERE ID =&ID;
============================================================================
COMPOUND TRIGGER 11G
============================================================================
CREATE OR REPLACE TRIGGER TABLEONE_COMPOUND_TRIGGER
FOR INSERT ON TABLEONE
COMPOUND TRIGGER

		BEFORE STATEMENT IS
		BEGIN  
		  DBMS_OUTPUT.PUT_LINE('BEFORE STATEMENT LEVEL');
		END	BEFORE STATEMENT;

		BEFORE EACH ROW IS
		BEGIN
		  DBMS_OUTPUT.PUT_LINE('BEFORE ROW LEVEL');
		END BEFORE EACH ROW;

		AFTER STATEMENT IS
		BEGIN
		  DBMS_OUTPUT.PUT_LINE('AFTER STATEMENT LEVEL');
		END AFTER STATEMENT;

		AFTER EACH ROW IS
		BEGIN
		  DBMS_OUTPUT.PUT_LINE('AFTER ROW LEVEL');
		END AFTER EACH ROW;

END TABLEONE_COMPOUND_TRIGGER;
/